{"ast":null,"code":"var _jsxFileName = \"/Users/nourjehanfaris/spacetagram/client/src/Components/UI/PhotoGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NASAdata from './NASAdata';\nimport Masonry from \"react-responsive-masonry\";\nimport { useState } from 'react';\nimport slice from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhotoGrid = _ref => {\n  _s();\n\n  let {\n    images\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('');\n  const INDEX = 10;\n\n  const loadMore = () => {\n    /*#__PURE__*/\n    _jsxDEV(Masonry, {\n      columnsCount: 2,\n      gutter: 4,\n      children: images.filter(image => {\n        if (searchTerm == \"\") {\n          return image;\n        } else if (image.date.includes(searchTerm)) {\n          return image;\n        } else if (image.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return image;\n        }\n      }).slice(0, INDEX + 10).map((image, key) => /*#__PURE__*/_jsxDEV(NASAdata, {\n        image: image\n      }, image.public_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchBar\",\n        placeholder: \"Search Date or Title...\",\n        onChange: event => {\n          setSearchTerm(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Masonry, {\n      columnsCount: 2,\n      gutter: 4,\n      children: images.filter(image => {\n        if (searchTerm == \"\") {\n          return image;\n        } else if (image.date.includes(searchTerm)) {\n          return image;\n        } else if (image.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return image;\n        }\n      }).slice(0, INDEX).map((image, key) => /*#__PURE__*/_jsxDEV(NASAdata, {\n        image: image\n      }, image.public_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"LoadButton\",\n        onClick: loadMore,\n        children: \"Load More...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PhotoGrid, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n\n_c = PhotoGrid;\nexport default PhotoGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoGrid\");","map":{"version":3,"sources":["/Users/nourjehanfaris/spacetagram/client/src/Components/UI/PhotoGrid.js"],"names":["React","NASAdata","Masonry","useState","slice","PhotoGrid","images","searchTerm","setSearchTerm","INDEX","loadMore","filter","image","date","includes","title","toLowerCase","map","key","public_id","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport NASAdata from './NASAdata'\nimport Masonry from \"react-responsive-masonry\"\nimport {useState} from 'react'\nimport slice from 'lodash';\n\n\nconst PhotoGrid = ({ images }) => {\n  const [searchTerm, setSearchTerm]=useState('')\n  const INDEX=10;\n  \n  const loadMore = () => {\n    <Masonry columnsCount={2} gutter={4}>\n          {images.filter((image)=>{\n            if(searchTerm == \"\"){\n              return image\n            } else if (image.date.includes(searchTerm)){\n              return image\n            } else if (image.title.toLowerCase().includes(searchTerm.toLowerCase())){\n              return image\n            }\n          }).slice(0, (INDEX+10)).map((image, key) => (\n            <NASAdata key={image.public_id} image={image}></NASAdata>\n          ))}\n\n      </Masonry>\n  }\n  return (\n    <div>\n      <div className = \"center\">\n        <input \n          className=\"searchBar\" \n          placeholder=\"Search Date or Title...\"\n          onChange = {(event) => {\n            setSearchTerm(event.target.value);\n          }}\n        /> \n      </div>\n      <Masonry columnsCount={2} gutter={4}>\n          {images.filter((image)=>{\n            if(searchTerm == \"\"){\n              return image\n            } else if (image.date.includes(searchTerm)){\n              return image\n            } else if (image.title.toLowerCase().includes(searchTerm.toLowerCase())){\n              return image\n            }\n          }).slice(0, INDEX).map((image, key) => (\n            <NASAdata key={image.public_id} image={image}></NASAdata>\n          ))}\n\n      </Masonry>\n    \n      <div className='footer'>\n        <button className=\"LoadButton\" onClick={loadMore}>Load More...</button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default PhotoGrid"]},"metadata":{},"sourceType":"module"}