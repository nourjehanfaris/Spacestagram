{"ast":null,"code":"var _jsxFileName = \"/Users/nourjehanfaris/spacetagram/client/src/Components/UI/PhotoGrid.js\";\nimport React from 'react';\nimport NASAdata from './NASAdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhotoGrid = (_ref, _ref2) => {\n  let {\n    images\n  } = _ref;\n  let {\n    searchTerm\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"grid\",\n    children: images.filter(image => {\n      if (searchTerm == \"\") {\n        return image;\n      } else if (image.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return image;\n      }\n    }).map(image => /*#__PURE__*/_jsxDEV(NASAdata, {\n      image: image\n    }, image.public_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PhotoGrid;\nexport default PhotoGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoGrid\");","map":{"version":3,"sources":["/Users/nourjehanfaris/spacetagram/client/src/Components/UI/PhotoGrid.js"],"names":["React","NASAdata","PhotoGrid","images","searchTerm","filter","image","title","toLowerCase","includes","map","public_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,iBAA8B;AAAA,MAA7B;AAAEC,IAAAA;AAAF,GAA6B;AAAA,MAAjB;AAACC,IAAAA;AAAD,GAAiB;AAC9C,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,cACKD,MAAM,CAACE,MAAP,CAAeC,KAAD,IAAS;AACtB,UAAGF,UAAU,IAAG,EAAhB,EAAmB;AACjB,eAAOE,KAAP;AACD,OAFD,MAEM,IAAIA,KAAK,CAACC,KAAN,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCL,UAAU,CAACI,WAAX,EAAnC,CAAJ,EAAkE;AACtE,eAAOF,KAAP;AACD;AACF,KANA,EAMEI,GANF,CAMOJ,KAAD,iBACL,QAAC,QAAD;AAAgC,MAAA,KAAK,EAAEA;AAAvC,OAAeA,KAAK,CAACK,SAArB;AAAA;AAAA;AAAA;AAAA,YAPD;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;KAAMT,S;AAiBN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport NASAdata from './NASAdata'\n\nconst PhotoGrid = ({ images }, {searchTerm}) => {\n  return (\n    <section className='grid'>\n        {images.filter((image)=>{\n          if(searchTerm ==\"\"){\n            return image\n          }else if (image.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n            return image\n          }\n        }).map((image) => (\n          <NASAdata key={image.public_id} image={image}></NASAdata>\n        ))}\n\n    </section>\n  )\n}\n\nexport default PhotoGrid"]},"metadata":{},"sourceType":"module"}